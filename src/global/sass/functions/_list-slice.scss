@function list-slice($list, $start: 1, $end: length($list) + 1) {
  $result: null;

  @if type-of($start) != number {
    @warn "@function list-slice(): $start must be a number.";
  } @else if type-of($end) != number {
    @warn "@function list-slice(): $end must be a number.";
  } @else {
    // Negative values indicate an offset from the end:
    @if $start < 0 {
      $start: length($list) + $start;
    }
    @if $end < 0 {
      $end: length($list) + $end;
    }
  }

  @if $start > $end {
    @warn "@function list-slice(): The start index has to be less than or equal to the end index.";
  } @else if $start < 1 {
    @warn "@function list-slice(): $start must be non-zero integer.";
  } @else if $end < 1 {
    @warn "@function list-slice(): $end must be non-zero integer.";
  } @else if $start == $end {
    @return ();
  } @else if $start > length($list) {
    @return ();
  } @else {
    @if $end > length($list) {
      $end: length($list);
    } @else {
      $end: $end - 1;
    }

    $result: ();

    @for $i from $start through $end {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}

// @debug 'a:', list-slice([a b c d], 1, 1);
// @debug 'a b:', list-slice([a b c d], 1, 2);
// @debug 'a b c:', list-slice([a b c d], 1, 3);
// @debug 'a b c d:', list-slice([a b c d], 1, 4);
// @debug 'a b c d:', list-slice([a b c d], 1, 5);
// @debug 'b:', list-slice([a b c d], 2, 3);

// @debug 'a:', list-slice([a b c d], 1, 2);
// @debug 'b:', list-slice([a b c d], 2, 3);
// @debug 'c:', list-slice([a b c d], 3, 4);
// @debug 'd:', list-slice([a b c d], 4, 5);
