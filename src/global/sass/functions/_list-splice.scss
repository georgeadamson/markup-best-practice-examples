@import './list-slice';

@function list-splice(
  $list,
  $start,
  $deleteCount: length($list) - $start,
  $values...
) {
  $result: null;

  @if type-of($start) != number {
    @warn "$start: #{quote($start)} is not a number for `insert-nth`.";
  } @else if $start < 1 {
    @warn "List index 0 must be a non-zero integer for `insert-nth`";
  } @else if $start > length($list) {
    $start: length($list);
  } @else {
    $left-index: if($start - 1 < 1, 1, $start);
    $right-index: $start + $deleteCount;

    $left: list-slice($list, 1, $left-index);
    $right: if(
      $right-index > length($list),
      (),
      list-slice($list, $right-index)
    );

    // @debug 'SPLICE a', $start, $left-index, $right-index, $list;
    // @debug 'SPLICE b', $left, $values, $right;
    $result: join(if($left != null, $left, ()), $values);
    $result: join($result, if($right != null, $right, ()));
  }

  @return $result;
}

// @debug 'x y b c d:', list-splice([a b c d], 1, 1, x, y); // x y b c d
// @debug 'a x y c d:', list-splice([a b c d], 2, 1, x, y); // a x y c d
// @debug 'a b x y d:', list-splice([a b c d], 3, 1, x, y); // a b x y d
// @debug 'a b c x y:', list-splice([a b c d], 4, 1, x, y); // a b c x y
